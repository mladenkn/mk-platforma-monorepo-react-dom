generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id                    Int    @id @default(autoincrement())
  title                 String
  content               String
  contact               String
  locationId            Int?
  userId                Int
  authorId              Int
  asPersonEndorsementId Int?   @unique

  location            Location?                 @relation(fields: [locationId], references: [id])
  images              Image[]
  comments            Post_comment[]
  categories          Post_category[]
  author              User                      @relation(fields: [authorId], references: [id])
  asPersonEndorsement Post_asPersonEndorsement? @relation(fields: [asPersonEndorsementId], references: [id])
}

model Post_asPersonEndorsement {
  id          Int    @id @default(autoincrement())
  postId      Int    @unique
  firstName   String
  lastName    String
  avatarStyle Json

  post   Post?
  skills Post_asPersonEndorsement_skill[]
}

model Post_asPersonEndorsement_skill {
  id                         Int                       @id @default(autoincrement())
  label                      String
  level                      Int
  post_asPersonEndorsement   Post_asPersonEndorsement? @relation(fields: [post_asPersonEndorsementId], references: [id])
  post_asPersonEndorsementId Int?
}

enum Post_category_label {
  job
  accommodation
  personEndorsement
  sellable
  gathering
  gathering_spirituality
  gathering_work
  gathering_hangout
}

model Post_category {
  id       Int                 @id @default(autoincrement())
  label    Post_category_label @unique
  parentId Int?
  posts    Post[]

  parent   Post_category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children Post_category[] @relation("CategoryHierarchy")
}

model Location {
  id        Int     @id @default(autoincrement())
  googleId  String
  latitude  Decimal
  longitude Decimal

  post Post[]
}

model Image {
  id           Int    @id @default(autoincrement())
  cloudinaryId String
  postId       Int

  post Post @relation(fields: [postId], references: [id])
}

model Post_comment {
  id       Int    @id @default(autoincrement())
  content  String
  authorId Int
  postId   Int

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [authorId], references: [id])
}

model User {
  id          Int    @id @default(autoincrement())
  name        String
  avatarStyle Json

  comments Post_comment[]
  posts    Post[]
}
